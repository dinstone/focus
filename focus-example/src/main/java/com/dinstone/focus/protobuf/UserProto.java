/*
 * Copyright (C) 2019~2023 dinstone<dinstone@163.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user.proto

package com.dinstone.focus.protobuf;

public final class UserProto {
    private UserProto() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
    }

    static final com.google.protobuf.Descriptors.Descriptor internal_static_user_UserCheckRequest_descriptor;
    static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_user_UserCheckRequest_fieldAccessorTable;
    static final com.google.protobuf.Descriptors.Descriptor internal_static_user_UserCheckResponse_descriptor;
    static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable internal_static_user_UserCheckResponse_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
    static {
        java.lang.String[] descriptorData = { "\n\nuser.proto\022\004user\"\"\n\020UserCheckRequest\022\016"
                + "\n\006userId\030\001 \001(\t\"\"\n\021UserCheckResponse\022\r\n\005e"
                + "xist\030\001 \001(\010B1\n\033com.dinstone.focus.protobu"
                + "fB\tUserProtoP\001\242\002\004userb\006proto3" };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
                new com.google.protobuf.Descriptors.FileDescriptor[] {});
        internal_static_user_UserCheckRequest_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_user_UserCheckRequest_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_user_UserCheckRequest_descriptor, new java.lang.String[] { "UserId", });
        internal_static_user_UserCheckResponse_descriptor = getDescriptor().getMessageTypes().get(1);
        internal_static_user_UserCheckResponse_fieldAccessorTable = new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_user_UserCheckResponse_descriptor, new java.lang.String[] { "Exist", });
    }

    // @@protoc_insertion_point(outer_class_scope)
}
